{
    "version": "0.2.0",
    "configurations": [

        {
            "name": "(msvc) Launch",
            "type": "cppvsdbg",
            "request": "launch",
            "program": "${command:cmake.launchTargetPath}",
            "args": [],
            "stopAtEntry": true,
            "cwd": "${workspaceFolder}",
            "environment": [
                {
                    // add the directory where our target was built to the PATHs
                    // it gets resolved by CMake Tools:
                    "name": "PATH",
                    "value": "${env:PATH};${command:cmake.getLaunchTargetDirectory};${workspaceFolder}\\thirdparties\\itk\\bin;C:\\Users\\ntmy\\GitRepos\\pp\\thirdparties\\itk\\bin"
                }
            ],
            "externalConsole": true,
            "logging": {
                "trace": false,
                "traceResponse": false,
                "engineLogging": false,
                "programOutput": false,
                "exceptions": false
            }            
        },
        {
            "name": "(gdb) Launch",
            "type": "cppdbg",
            "request": "launch",
            "program": "${command:cmake.launchTargetPath}",
            "args": [],
            "stopAtEntry": true,
            "cwd": "${workspaceFolder}",
            "environment": [
                {
                    // add the directory where our target was built to the PATHs
                    // it gets resolved by CMake Tools:
                    "name": "PATH",
                    "value": "${env:PATH}:${command:cmake.getLaunchTargetDirectory}:${workspaceFolder}/thirdparties/itk/lib"
                },   
                {

                    // add the directory where our target was built to the PATHs
                    // it gets resolved by CMake Tools:
                    "name": "LD_LIBRARY_PATH",
                    "value": "${env:LD_LIBRARY_PATH}:${command:cmake.getLaunchTargetDirectory}:${workspaceFolder}/thirdparties/itk/lib"
                }             
            ],
            "externalConsole": true,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                },
                {
                    "description": "Set Disassembly Flavor to Intel",
                    "text": "-gdb-set disassembly-flavor intel",
                    "ignoreFailures": true
                }
            ]
        }
    ]
}